---
import type { CategoryResponse } from '../library/microcms'
import MenuList from './MenuList.astro'
export interface Props {
  category: CategoryResponse
}
const { category } = Astro.props
---

<div class='hedearArea'>
  <div class='hedear'><a href='/'>サイト名は、未定。</a></div>
  <button class='menubutton js-menubutton' type='button'><span></span></button>
  <div class='mask js-mask'></div>
  <div class='side'>
    <div class='titleArea'>
      <h1 class='titleText'><a href='/'>サイト名は、<br />未定。</a></h1>
    </div>
    <MenuList category={category} />
    <div class='copyright'>© sample.</div>
  </div>
</div>

<script>
  const button = document.querySelector('.js-menubutton')
  const mask = document.querySelector('.js-mask')
  const side = document.querySelector('.side')
  const header = document.querySelector('.hedear')
  if (button && mask && side && header) {
    button.addEventListener('click', () => {
      mask.classList.toggle('active')
      side.classList.toggle('active')
      button.classList.toggle('active')
    })
    mask.addEventListener('click', () => {
      mask.classList.toggle('active')
      side.classList.toggle('active')
      button.classList.toggle('active')
    })
  }
</script>

<style lang='scss'>
  .hedear {
    position: fixed;
    visibility: hidden;
    justify-content: space-between;
    width: calc(100vw - 16px * 2);
    background: #fff;
    z-index: 1;
    display: flex;
    align-items: center;
    padding: 16px 16px;
    @media screen and (max-width: 600px) {
      visibility: visible;
    }
    a {
      color: #123123;
      &::after {
        display: none;
      }
    }
  }
  .menubutton {
    position: fixed;
    right: 16px;
    top: 16px;
    z-index: 2;
    height: 24px;
    width: 24px;
    z-index: 2;
    visibility: hidden;

    @media screen and (max-width: 600px) {
      visibility: visible;
    }
    & span,
    & span:before,
    & span:after {
      content: '';
      display: block;
      height: 1px;
      width: 24px;
      border-radius: 2px;
      background-color: black;
      position: absolute;
      transition: all 0.2s ease-in-out;
    }
    & span:before {
      bottom: 8px;
    }
    & span:after {
      top: 8px;
    }
    &.active {
      & span {
        background-color: transparent;
      }
      & span:before {
        bottom: 0;
        transform: rotate(-45deg);
        background-color: white;
      }
      & span:after {
        top: 0;
        transform: rotate(45deg);
        background-color: white;
      }
    }
  }

  .mask {
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    position: fixed;
    top: 0;
    visibility: hidden;

    &.active {
      background: #000;
      opacity: 0.5;
      content: '';
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 1;
    }
    @media screen and (max-width: 600px) {
      visibility: visible;
    }
  }

  .side {
    position: fixed;
    width: 180px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    border-right: solid #123123 2px;
    background: white;
    transition: left 0.2s ease-in-out;
    height: 100vh;
    @media screen and (max-width: 600px) {
      width: 80vw;
      z-index: 2;
      height: 100vh;
      top: 0;
      left: calc(-80vw - 2px);

      &.active {
        left: 0;
      }
    }
    .titleArea {
      font-size: 1.5rem;
      text-align: right;
      padding: 16px 8px 16px 8px;
      background-size: cover;
      display: flex;
      justify-content: flex-end;
      align-items: flex-start;
      .titleText {
        font-size: 1.5rem;
        font-weight: 500;
        text-align: right;
        a {
          color: #123123;
          text-decoration: none;
          &::after {
            display: none;
          }
        }
      }
    }
    .copyright {
      font-size: 0.8rem;
      padding: 8px 16px;
      bottom: 0;
      right: 0;
      position: absolute;
    }
  }
</style>
